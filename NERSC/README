############## INSTALLATION and STARTUP #############

# This is for an installation using Vagrant Up
# The Vagrantfile and startup are taken from https://github.com/jackdb/pg-app-dev-vm
# Initial boot and configuration:

cd NERSC
vagrant up
# once booted, 'vagrant ssh' into the box and check you can access the database
# The full syntax is:
# psql --username $user --host $host --port $port $database
# and give the password at the prompt. But, with the ~/.pgpass, and a environment
# variables defined in your ~/.profile by the bootstrap, you should be able to just:
psql

# You should find MPO_HOME defined in your ~vagrant/.profile
cd $MPO_HOME
# create the DB schema.
psql --username mpoadmin -a -f $MPO_HOME/db/create_tables.sql 

# TBD: does this still work?
## Start up all services

#set host for client and other env variables
#cd to mpo working directory
export MPO_HOME=$PWD
export MPO_VERSION=v0
export MPO_HOST=https://localhost:8443
export MPO=$MPO_HOME/client/python/mpo_arg.py
alias mpo=$MPO #if you like
export MPO_AUTH='~/Desktop/keyStore.pem' #p12 support to be added. requires autogeneration of pem file
#or
export MPO_AUTH=$MPO_HOME/'MPO Demo User.pem' #to use cert that comes with mpo
export MPO_RC='path to optional resources file' # not implemented

./api_server.sh&
./web_server.sh &

# pre wsgi 
./server/python server.py &


## Reset database
As database owner:
> dropdb 'mpoDB'
> createdb  mpoDB
> psql mpoDB < db/mpoDB_reference
##update reference database
pg_dump mpoDB > $MPO_HOME/db/mpoDB_reference


This will reset the default database to the reference DB from GA with 75 workflows 
that was introduced in the summer of 2013.